c언어
>3046
r1과 r2가 있을 때 s=(r1+r2)/2 였다. r2를 구하는 문제.
r2=2*s-r1 처럼 식만 다시 만들면 돼서 쉬운 문제였다.
>3733
문제가 영어였는데 소싯적 내 영어 실력만 믿고 하다가 계속 틀려서 파파고의 도움을 받았다. 파일의 끝으로 끝나서 while문을 쓰고 EOF가 아닐 때까지 반복하게 하였다.
>4299
연립방정식을 이용해 각 팀의 점수를 구하는 문제였다. 내가 여기서 틀렸던 건 득점을 많이 한 쪽을 먼저 출력하는 부분이었던 것 같다. 만약 x가 y보다 더 클 경우 printf("%d %d",x,y); 이외에는 printf("%d %d",y,x);
...?잘 한 것 같은데..? 나머지는 똑같았다. 어느 부분이 달랐던 거지..?
#include <stdio.h>

int main(void) {
	int add, sub,x=0,y=0;
	scanf("%d %d", &add, &sub);
	if (add != 0) {
		x = (sub + add)/2;
		y = (add - sub) / 2;
		if (x > y) printf("%d %d", x, y);
		else printf("%d %d", y, x);
	}
	else { printf("-1"); }
	return 0;
}//이게 내 코드
#include <stdio.h>

int main(void) {
	int add, sub,x=0,y=0;
	scanf_s("%d %d", &add, &sub);
	if (add < sub)
		printf("-1");
	else {
		x = (add + sub) / 2;
		y = (add - sub) / 2;
		if (x + y == add && x - y == sub)
			printf("%d %d", x, y);
		else
			printf("-1");
	}
	return 0;
}//이게 정답
..흠..
>4470
항상 난 문자열 입력받는 걸 그렇게 못한다.
찾아보니 문자열을 입력받을 때는 scanf를 사용하는 것보다 fgets() 함수를 사용하는 게 더 낫다고 한다.
scanf 함수를 사용하면 경우에 따라 컴파일러에서 지원되지 않거나 올바르게 구현되지 않는 경우가 있어 안전하게 문자열을 다룰 수 있는 fgets()함수를 사용해야 한다고 한다.
fgets()함수는 file get string의 줄임말로 개행 문자를 포함하여 문자열을 읽어온다.
그전에 getchar();를 사용하는데 getchar()는 키보드로부터 한 문자를 반환하는데 입력을 받아들일 동안 에러가 발생할 수 있기 때문에 오류가 발생할 수 있다고 한다.(학교에서 배웠던 것 같은데...자세히 기억인 안 나네..^^;) fets함수는 fgets(문자열,문자열의 길이,파일을 가리키는 파일 포인터) 이렇게 사용한다.
문자열은 문자를 저장해준 변수, 문자열의 길이는 (sizeof)변수 이렇게 해주고, 파일을 가리키는 포인터는 키보드로부터 데이터를 입력 받기 위한 스트림인 stdin(표준 입력 스트림)을 사용한다.
>4999
지난주에 못 풀었던 4999번을 다시 풀어보았다. fgets로 4470번을 풀었으니 똑같이 문자열의 길이를 이용하는 문제인 4999번을 풀 수 있을 것 같았다. 처음에는 if문으로 a문자열의 크기와 b문자열의 크기를 비교했는데  그렇게 된다면 처음에 설정한 a문자열의 크기와 b문자열의 크기가 똑같으니 출력값은 no만 나왔다. 그래서 strlen으로 변경한 후 정답을 제출했는데 그래도 틀렸다고 나왔다. 값이 크거나 작을 때만 설정해주었지 같을 때는 설정해주지 않은 것 같아서 만약 재환이가 ah를 외친 길이와 의사가 ah를 외친 길이가 똑같을 때 go를 출력하라고 했을 때 정답이었다!
>5337
이전에 풀었던 강아지 출력문제, 소 출력문제처럼 \는 \\ 두 번을 써서 출력하게 만드는 쉬운 문제였다.
>5338
5337번과 비슷한 문제였다. 작은 따옴표를 출력할 때는 \' 이런 식으로 해주면 된다.
>5339
콜센터 직원을 출력하는 문제. 이지~
>5522
5개의 숫자들을 입력받아 모두 더한 값을 출력하는 문제였다. 투 이지~
>5524
첫째 줄에 입력한 정수만큼 대문자 소문자 관계없이 문자열을 반복해서 입력받는다. 이때 출력되는 문자열은 모두 소문자이어야 하는 게 이번 문제이다.
문제를 풀면서 입력받는 데에는 문제가 없었지만 대문자를 소문자를 바꾸는 과정에서 첫 번째 글자는 소문자로 바뀌지만 마지막 글자가 소문자로 바뀌지 않는 문제점이 있었다.
음..답을 찾아봤다. 답에서는 함수를 이용했다. 아 이 문제에서 함수를 사용한다면 가독성 좋은 코드가 될 것 같다. 음....60점이 나왔다. 어느 부분에서 틀린 지 모르겠다. 나중에 다시 풀어보자.
>5532
l,a,b,c,d를 입력받고 if문을 사용하여 b를 d로 나눈 나머지가 1보다 크거나 같을 때 나눈 몫에 1을 더하는 divde1변수를 만들고 a와 c를 나눴을 때도 동일하게 divide2 변수를 만들어 각각의 값을 저장하도록 하였다.
만약 divide1 값이 divide2보다 클 때 l에서 divide1을 빼고 아닐 경우 divide2를 빼도록 하였다.
결과는 성공 야호!
>5543
5532번처럼 여러 개의 변수를 만들어 입력받고 if문을 썼는데 비교해야하는 경우의 수가 너무 많아서 코드의 가독성이 떨어지고 나조차도 경우의 수를 몇 개 빼먹어 자꾸 틀렸다.
다른 분들은 코드를 어떻게 작성했는지 찾아보았는데 변수를 4개만 설정하고 햄버거의 가장 작은 값을 L이라고 했을 때 L의 초기값을 0으로 설정한다. if문으로 L이 0일 때 L에 b를 저장하고 만약 L이 햄버거보다 클 경우 L에 햄버거 값이 저장되도록 하였다. 오오오 이렇게 한다면 짧고 가독성 좋은 코드가 완성될 게 분명했다. 어떻게 이런 생각을 한 건지 참 대단하다.
>5554
네 개의 입력을 받아서 모두 더해준 뒤 60으로 나누어 몫을 먼저 출력하고 나머지를 후에 출력하는데 만약 60으로 나누었을 때 1이 나온다면 1을 출력해준 뒤 0을 출력하는 코드를 작성한 쉬운 문제였다.
>5575
1.이중 for문을 써서 세번째 줄까지 정수를 입력받고 두 번째 for문에서는 시간 분 초를 6개 입력받는다.
2.if문을 써서 근무 시간 중 초가 0보다 작을 경우에 time[6]+60-time[3]을 해주기. 분도 동일하게.
3.출력
근데 입력까지만 되고 출력이 되지 않았다... 무엇이 문제일까..
아 나는 왜 전체 시간을 초로 바꿀 생각은 하지 못했지...? 전체 시간을 초로 바꾸어서 계산한 뒤에 초,분,시간을 나누어서 계산하면 방법도 있었다.
H[i] = T / 60 / 60 % 24;
M[i] = T / 60 % 60;
S[i] = T % 60;
와 이 생각은 하지도 못했는데 ;;
갈길이 멀다..
>5596
1.네 과목의 변수와 총합의 변수 두 개 
2.각각을 입력받고 총합에 더한 값 넣기
3.비교해서 출력하기
물론 맞았지만 내 코드가 기존의 값이 이미 저장되어있는 상태에 또 입력을 받는 거라 오류가 날 것 같기도 하고 썩 좋은 코드같지도 않아서 다른 분들은 이 문제를 어떻게 풀으셨는지 찾아봤다.
아 그냥 배열로 입력받아서 sum에 더하는 방법도 있었다. 나는 if,else if,else 까지 썼는데 만세의 총합이 클 떄만 if문으로 해주고 나머지 else는 민국이의 총합을 출력한다면 코드의 길이를 줄일 수 있다는 것을 알았다.
>5717
쉬운 문제인데 자꾸만 틀렸다. while문을 사용하고 a가 0일 때 break하여 탈출하게끔 했는데 내가 a가 0일때도 우선 출력을 하고 탈출하게 하여 틀린 것이었다.
>6749
둘째 나이에서 셋째 나이를 뺀 숫자를 둘째 나이에 더해주면 첫째의 나이를 알 수 있다. 쉬운 문제였다.
>7287
입력받는 건 없고 내가 지금까지 맞은 문제 개수와 아이디를 출력하는 문제였다. 문제는 쉬웠지만 내가 지금까지 맞은 문제의 개수가 너무 작고 앙증맞아 깜짝 놀랐다. 74...? 분발하자.지유야.
>9086
strlen을 사용하여 마지막 배열의 값을 출력받고자 했다. num에 strlen(s) 값을 저장하였지만 값은 출력되지 않았다. 임의로 간단한 다른 코드를 만들어 여러 시도를 해보니 내가 strlen과 배열에 대해서 조금 더 깊이 생각했어야 하는 것을 깨달았다. strlen은 null값까지 포함해서 모두 읽는다. ABCDE라고 입력했을 경우 num의 값은 6. E를 출력하려면 s[4]를 해야하므로 strlen을 사용해서 마지막 값을 출력하려면 2를 빼주어야 한다. 따라서 
num=strlen(s)-2;.ㅠㅠㅠㅠㅠ맞췄다ㅠㅠㅠ
>9653
스타워즈 로고를 출력했다..
>9654
그냥 출력하는 문제..이제 그냥 출력하는 문제는 제외하고 풀어보자.
>10039
1.for문으로 5번 반복
2.40 미만일 경우 변수 s에 40 저장
3.모두 더한 값을 5로 나누어 평균 값 출력
쉬웠다
>10757
자료형의 범위를 알기 위해 풀어보았다. ????자료형의 범위를 훌쩍 넘어가는 범위이다.
자료형의 범위를 다시 알아보려다 봉변을 당했다.
답을 찾아보았지만 문자열을 입력받는데에 문제가 있는지 입력만 되고 출력이 되질 않았다.. 나중에 다시 풀기로 하고 헷갈렸던 부분만 정리하고 일단은 넘어가자.
우선 int형의 범위는 -2^31~2^31-1
unsigned는 양수 범위만 갖는다.(0~2^32-1)
signed가 붙으면 음수값도 저장할 수 있다.
그중 헷갈렸던 삼항연산자도 찾아보았는데
num1>num2?10:20 일 경우 num1>num2가 참일 경우 10을 사용하고 거짓일 때는 20을 사용한다.
>10768
조건만 잘 생각하면 쉬운 문제였다.
>10797
num을 배열로 입력받고 먼저 입력한 d(날짜의 일의 자리 숫자)와 일치한다면 cnt가 1씩 증가하도록 하였다.
>10808
함수를 만들어서 알파벳 개수가 26개이므로 입력된 문자열에 해당 알파벳의 유무를 검사하여 있으면 1을 출력, 없으면 0을 출력하도록 하였다. 하지만 전부 다 1이 출력되었다. 음... 알파벳의 유무를 검사하려면 함수의 코드를 다시 짜야하나 보다.
으음...모르겠어서 찾아봤다. 문자열을 arr[26]에 입력받고 str[100]배열을 만든다. for문을 사용하여 100번 반복한 후 arr[str[i]-'a']++;을 해준다. 여기에서는 아스키코드를 사용하는데 만약 b라면 아스키코드 b-a는 1이므로 알파벳 b에 1이 더해진다. baekjoon을 입력하면 o가 중복되므로 o 자리에는 2가 저장되게 된다. 이후 for문을 한 번 더 사용하여 arr배열에 어떤 숫자가 입력되어있는지 출력해주면 된다...
>10872
1.팩토리얼을 사용하여 값을 출력하는 문제였다. 입력받을 정수와 최종값 cnt를 1로 초기화 시켜준다. 
2.for문을 사용하여 입력받은 정수만큼 반복해준 뒤 i를 cnt에 곱해준다.
3.출력
쉬운 문제였다!

java
>10950
케이스의 개수 t를 먼저 입력받은 뒤 for문을 사용하여 반복해준다. for문 안에 a와 b를 입력받아 더한 값을 출력해주는 쉬운 문제였다.
>8393
n을 입력받고 for문으로 n만큼 반복하여 i를 변수 cnt에 더해주고 출력해준다.
in.close();하는 거 잊지말기
>25304
sum이라는 배열에 더해준 값을 더해주고 for문으로 배열에 저장된 값들을 모두 더해준 뒤 더한 값이 총가격과 같으면 Yes를 출력하고 다를 경우 No를 출력하게끔 했는데 배열과 for문 2개를 사용하다 보니 런타임에러가 생겼다. for문과 배열을 없애고 총가격에서 입력받은 값 두개의 곱을 빼줬을 때 최종적으로 값이 0이 되는지를 판단해주었다. 코드를 줄여보자!
>25314
코드를 옳게 작성한 것 같은데 값이 나오지 않아서 코드를 다시 보니 System.out.println이라고 적어서였다. 줄바꿈없이 출력할 때는 print까지만 써주자.
>11021
문장과 a+b를 출력하고 싶을 때
System.out.println("Case #"+i+": "+(a+b));
이렇게 괄호를 사용하자.
아 그리고 in.close();는 굳이 안 사용해도 되는 듯하다.
>11022
11021과 유사한 문제로 식까지 출력하는 문제였다. +와 큰따옴표를 활용하면 된다.
>2438
별을 출력하는 문제였다. 이중 for문을 쓰고 *을 출력한 후에 \n을 사용하면 된다.
>2439
두번째 for문에서는 int j=s-1이되, j>=i까지 해야 원하는 만큼 빈칸이 입력된다.
>10952
자바에서 while문 무한루프를 사용하고 싶다면 항상 참이되는 식을 넣어야 하는데 c처럼 while(1)은 오류가 생겼다. while(1) 대신 while(true)를 사용해주면 된다.
>10951
자바에는 BufferedReader라는 것이 있다고 한다. BufferedReader의 경우 null을 반환하는데 null인지 아닌지 조건문을 통해 구분해주면 된다고 한다. 이번 문제의 경우 EOF인지 아닌지를 구분해주면 된다.
public class 백준10951 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int a,b;
		while(sc.hasNextInt()) {
			a=sc.nextInt();
			b=sc.nextInt();
			System.out.println(a+b);
		}
		sc.close();

	}

}
>2083
String을 입력받을 때는
String name=in.next();를 해주고
string에 #이 입력됐는지를 알아볼 때는 name.equals("#")이라고 해준다.
>2440
별을 찍는데 입력된 숫자가 5라면 5개부터 하나씩 차례로 줄며 *이 입력되는 문제였다. 하나씩 늘어갈 때와 for문을 반대로 짜주면 된다.
>2475
각각의 수들을 입력받고 각각의 수를 제곱하고 10으로 나눈 나머지 값을 출력해주면 되는 문제였다.
>5337
자바도 \를 출력할 때 c와 똑같이 \를 두 번 입력해주면 출력된다.
>5338
c와 다르게 작은 따옴표를 출력할 때 /'를 안 하고 '하나만 입력해도 출력이 된다. 편하다.
>5339
eclipse는 visual studio와 달리 \를 출력하고 싶을 때 \\ 이렇게 바로 두 개를 입력해주어서 헷갈리지 않고 편하게 출력할 수 있었다.
>5522
초기값을 무조건 설정해주어야 한다.
int sum;
for문에서 sum+=a를 해주었을 때 초기값이 설정되지 않아 오류가 생겼다.
>9653
파일의 끝에 도달하여서 컴파일 에러가 발생한 것을 제외하고는 출력만 하면 돼서 쉬운 문제였다.
>9654
;말고 l써서 틀렸네,, 꼼꼼히 확인할 것..!
>2741
자바는 c보다 속도가 느린 것 같다.
아무튼 2741번은 입력된 수가 5라면 1부터 5까지 전부 더해주는 문제였다.1.
